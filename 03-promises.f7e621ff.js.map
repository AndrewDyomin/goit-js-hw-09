{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAChCC,EAAWF,SAASG,iBAAiB,UACnCC,EAAOC,EAAMC,GAAWJ,EAEhCH,EAAOQ,iBAAiB,UAOxB,SAAuBC,GACrB,IAAIC,EAAeL,EAAMM,MAAQL,EAAKK,MAClCC,EAAcC,OAAOP,EAAKK,OAE9BF,EAAMK,iBACJC,YAAW,KACTC,EAAUC,aAAY,KACpB,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAU,IAAIC,SAAQ,CAACC,EAASC,KAChCN,EACFK,EAAQ,C,SAAEE,E,MAAUpB,IAEpBmB,EAAO,C,SAAEC,E,MAAUpB,GAAQ,IAI3BoB,EAAWlB,EAAOI,MACpBc,IAEAC,cAAcV,GAGhBK,EACCM,MAAK,EAAGC,SAAAC,EAAQC,MAAEA,MACjBC,EAAAjC,GAASkC,OAAOC,QAAQ,uBAAqBJ,QAAiBnB,EAAeE,OAC3EA,GAA0BC,OAAOP,EAAKK,MAAM,IAG/CuB,OAAM,EAAGN,SAAAO,EAAQL,MAAEA,MAClBC,EAAAjC,GAASkC,OAAOI,QAAQ,sBAAoBD,QAAezB,EAAeE,OAC1EA,GAA4BC,OAAOP,EAAKK,MAAM,GAE9C,GACDC,EAAY,GAChBF,E,IAvCL,IAAIe,EAAW,EACXT,EAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst inputArr = document.querySelectorAll('input');\nconst [ delay, step, amount ] = inputArr;\n\nformEl.addEventListener('submit', createPromise);\n\nlet position = 1;\nlet timerId = null;\n\n\n\nfunction createPromise(event) {\n  let currentDelay = delay.value - step.value;\n  let currentStep = Number(step.value);\n  \n  event.preventDefault();\n    setTimeout(() => {\n      timerId = setInterval(() => {\n        const shouldResolve = Math.random() > 0.3;\n        const promise = new Promise((resolve, reject) => {\n          if (shouldResolve) {\n            resolve({ position, delay });\n          } else {\n            reject({ position, delay });\n          }\n        });\n\n        if (position < amount.value) {\n          position ++;\n        } else {\n          clearInterval(timerId);\n        };\n\n        promise\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${(currentDelay + currentStep)}ms`);\n          currentStep = currentStep + Number(step.value);\n          \n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${(currentDelay + currentStep)}ms`);\n          currentStep = currentStep + Number(step.value);\n          \n        });\n      }, currentStep)\n  }, currentDelay)\n};\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$inputArr","querySelectorAll","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","addEventListener","event","currentDelay","value","currentStep","Number","preventDefault","setTimeout","$47d4ff9957288465$var$timerId","setInterval","shouldResolve","Math","random","promise","Promise","resolve","reject","$47d4ff9957288465$var$position","clearInterval","then","position","position1","delay","$parcel$interopDefault","Notify","success","catch","position2","failure"],"version":3,"file":"03-promises.f7e621ff.js.map"}